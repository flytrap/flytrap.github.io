#+TITLE: 域名信息收集工具
#+DATE: <2019-01-10>
#+TAGS: dns,nslookup,dig
#+LAYOUT: post
#+CATEGORIES: tech

** nslookup
非交互模式
#+begin_src bash
nslookup www.baidu.com
nslookup -type=ns www.baidu.com 8.8.8.8
#+end_src

交互模式
#+begin_src bash
nslookup
>www.baidu.com  # 查询指定域名
>server 8.8.8.8  # 设置dns服务器
>set type=ns  # 设置记录类型
#+end_src

整个查询过程一般会有多个步骤，从根一级级查询回来，回来的记录可能还是一个域名，继续查询，最终得到ip。
当然，这个过程自动完成，想看细节，最好抓包去看。
#+begin_html
<!--more-->
#+end_html
** dig
通过dns(8.8.8.8)查询www.baidu.com 的mx记录,得到了cname记录,意味着域名指向了域名
#+begin_src bash
dig @8.8.8.8 www.baidu.com mx
www.baidu.com.		1094	IN	CNAME	www.a.shifen.com.
www.a.shifen.com.	48	IN	CNAME	www.wshifen.com.
#+end_src

反向查询,加个精简参数
#+begin_src bash
dig +short -x 8.8.8.8
google-public-dns-a.google.com.
#+end_src

查询bind版本信息,获取所有记录的最佳策略
#+begin_src bash
dig +noall +answer txt chaos VERSION.BIND @ns3.dnsv4.com
VERSION.BIND.		0	CH	TXT	"1.1.1711.01"
#+end_src

区域传输,相当于是同步数据，很多都不接受，接受的话就可以拿到所有子域名.
通过百度的dns服务器去获取
#+begin_src bash
dig @ns4.baidu.com baidu.com axfr
; Transfer failed.
host -T -l baidu.com ns4.baidu.com  # 关键参数[-l]执行axfr的全区域差异传输，-T表示时间
Host baidu.com not found: 5(REFUSED)
#+end_src

查询过程追踪，获取整个查询路径，访问到的所有dns服务器.
#+begin_src bash
dig +trace www.baidu.com
#+end_src
